"""Add user, preferences, file tables

Revision ID: 3cfd5ab2eef5
Revises:
Create Date: 2025-01-06 13:25:31.510801

"""

from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = "3cfd5ab2eef5"
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    sa.Enum("image", "video", "audio", "document", "other", name="filetypes").create(
        op.get_bind()
    )
    sa.Enum("male", "female", "friends", name="preferredgenders").create(op.get_bind())
    sa.Enum("uz", "ru", "en", name="uilanguages").create(op.get_bind())
    sa.Enum("male", "female", name="genders").create(op.get_bind())
    op.create_table(
        "file",
        sa.Column("id", sa.Integer(), autoincrement=True, nullable=False),
        sa.Column("telegram_id", sa.BIGINT(), nullable=True),
        sa.Column("telegram_unique_id", sa.String(), nullable=True),
        sa.Column("telegram_path", sa.String(), nullable=True),
        sa.Column("path", sa.String(), nullable=True),
        sa.Column(
            "file_type",
            postgresql.ENUM(
                "image",
                "video",
                "audio",
                "document",
                "other",
                name="filetypes",
                create_type=False,
            ),
            nullable=False,
        ),
        sa.Column(
            "uploaded_at",
            sa.DateTime(),
            server_default=sa.text("TIMEZONE('utc', now())"),
            nullable=False,
        ),
        sa.PrimaryKeyConstraint("id", name=op.f("pk_file")),
    )
    op.create_index(op.f("ix_file_telegram_id"), "file", ["telegram_id"], unique=False)
    op.create_table(
        "user_account",
        sa.Column("id", sa.Integer(), autoincrement=True, nullable=False),
        sa.Column("telegram_id", sa.BIGINT(), nullable=False),
        sa.Column("name", sa.String(), nullable=False),
        sa.Column("age", sa.Integer(), nullable=False),
        sa.Column(
            "rating", sa.Integer(), server_default=sa.text("1400"), nullable=False
        ),
        sa.Column(
            "is_active", sa.Boolean(), server_default=sa.text("true"), nullable=False
        ),
        sa.Column("bio", sa.String(length=255), nullable=True),
        sa.Column(
            "gender",
            postgresql.ENUM("male", "female", name="genders", create_type=False),
            nullable=False,
        ),
        sa.Column("latitude", sa.Float(), nullable=True),
        sa.Column("longitude", sa.Float(), nullable=True),
        sa.Column(
            "ui_language",
            postgresql.ENUM("uz", "ru", "en", name="uilanguages", create_type=False),
            nullable=False,
        ),
        sa.Column(
            "created_at",
            sa.DateTime(),
            server_default=sa.text("TIMEZONE('utc', now())"),
            nullable=False,
        ),
        sa.Column(
            "updated_at",
            sa.DateTime(),
            server_default=sa.text("TIMEZONE('utc', now())"),
            nullable=False,
        ),
        sa.PrimaryKeyConstraint("id", name=op.f("pk_user_account")),
    )
    op.create_index(op.f("ix_user_account_age"), "user_account", ["age"], unique=False)
    op.create_index(
        op.f("ix_user_account_telegram_id"),
        "user_account",
        ["telegram_id"],
        unique=True,
    )
    op.create_table(
        "user_media",
        sa.Column("user_id", sa.Integer(), nullable=False),
        sa.Column("file_id", sa.Integer(), nullable=False),
        sa.ForeignKeyConstraint(
            ["file_id"],
            ["file.id"],
            name=op.f("fk_user_media_file_id_file"),
            ondelete="CASCADE",
        ),
        sa.ForeignKeyConstraint(
            ["user_id"],
            ["user_account.id"],
            name=op.f("fk_user_media_user_id_user_account"),
            ondelete="CASCADE",
        ),
        sa.PrimaryKeyConstraint("user_id", "file_id", name=op.f("pk_user_media")),
        sa.UniqueConstraint("user_id", "file_id", name=op.f("uq_user_media_user_id")),
    )
    op.create_table(
        "user_preferences",
        sa.Column("user_id", sa.Integer(), nullable=False),
        sa.Column("min_age", sa.Integer(), nullable=True),
        sa.Column("max_age", sa.Integer(), nullable=True),
        sa.Column(
            "preferred_gender",
            postgresql.ENUM(
                "male", "female", "friends", name="preferredgenders", create_type=False
            ),
            nullable=False,
        ),
        sa.ForeignKeyConstraint(
            ["user_id"],
            ["user_account.id"],
            name=op.f("fk_user_preferences_user_id_user_account"),
            ondelete="CASCADE",
        ),
        sa.PrimaryKeyConstraint("user_id", name=op.f("pk_user_preferences")),
    )
    op.create_index(
        op.f("ix_user_preferences_max_age"),
        "user_preferences",
        ["max_age"],
        unique=False,
    )
    op.create_index(
        op.f("ix_user_preferences_min_age"),
        "user_preferences",
        ["min_age"],
        unique=False,
    )
    op.create_index(
        op.f("ix_user_preferences_preferred_gender"),
        "user_preferences",
        ["preferred_gender"],
        unique=False,
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(
        op.f("ix_user_preferences_preferred_gender"), table_name="user_preferences"
    )
    op.drop_index(op.f("ix_user_preferences_min_age"), table_name="user_preferences")
    op.drop_index(op.f("ix_user_preferences_max_age"), table_name="user_preferences")
    op.drop_table("user_preferences")
    op.drop_table("user_media")
    op.drop_index(op.f("ix_user_account_telegram_id"), table_name="user_account")
    op.drop_index(op.f("ix_user_account_age"), table_name="user_account")
    op.drop_table("user_account")
    op.drop_index(op.f("ix_file_telegram_id"), table_name="file")
    op.drop_table("file")
    sa.Enum("male", "female", name="genders").drop(op.get_bind())
    sa.Enum("uz", "ru", "en", name="uilanguages").drop(op.get_bind())
    sa.Enum("male", "female", "friends", name="preferredgenders").drop(op.get_bind())
    sa.Enum("image", "video", "audio", "document", "other", name="filetypes").drop(
        op.get_bind()
    )
    # ### end Alembic commands ###
