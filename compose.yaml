services:
  bot:
    restart: always
    build:
      context: ./backend
      target: prod
    env_file:
      - .env
    depends_on:
      - db 
      - mongo
    user: appuser
    command: sh -c "alembic upgrade head && python3 -m bot.main"

  api:
    restart: always
    build:
      context: ./backend
      target: prod
    env_file:
      - .env
    depends_on:
      db:
        condition: service_healthy
        restart: true
    user: appuser
    command: python3 -m api.main
    labels:
      - traefik.enable=true
      - traefik.http.services.api.loadbalancer.server.port=8000
      - traefik.http.routers.api.rule=Host(`api.${DOMAIN}`)
      - traefik.http.routers.api.entrypoints=http
      - traefik.http.routers.api-https.rule=Host(`api.${DOMAIN}`)
      - traefik.http.routers.api-https.entrypoints=https
      - traefik.http.routers.api-https.tls=true
      - traefik.http.routers.api-https.tls.certresolver=le

      - traefik.http.routers.api.middlewares=https-redirect

  frontend:
    restart: always
    build: ./frontend
    env_file:
      - .env
    command: npm run dev -- --host 0.0.0.0
    labels:
      - traefik.enable=true
      - traefik.http.routers.frontend.rule=Host(`${DOMAIN}`)
      - traefik.http.routers.frontend.entrypoints=http
      - traefik.http.services.frontend.loadbalancer.server.port=5173
      - traefik.http.routers.frontend-https.rule=Host(`${DOMAIN}`)
      - traefik.http.routers.frontend-https.entrypoints=https
      - traefik.http.routers.frontend-https.tls=true
      - traefik.http.routers.frontend-https.tls.certresolver=le

      - traefik.http.routers.frontend.middlewares=https-redirect

  db:
    image: postgres:15-alpine
    restart: always
    volumes:
      - postgres_data:/var/lib/postgresql/data/
    env_file:
      - .env
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}"]
      interval: 10s
      retries: 5
      start_period: 30s
      timeout: 10s
      
  mongo:
    image: mongo:5.0
    restart: always
    volumes:
      - mongo_data:/data/db
    env_file:
      - .env
    environment:
      - MONGO_INITDB_ROOT_USERNAME=${MONGO_ADMIN}
      - MONGO_INITDB_ROOT_PASSWORD=${MONGO_PASSWORD}
    expose:
      - "27017"

  traefik:
    image: traefik:v3.4
    ports:
      - "80:80"
      - "443:443"
    restart: always
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - traefik-certificates:/certificates
    labels:
      - traefik.enable=true
      - traefik.http.services.traefik-dashboard.loadbalancer.server.port=8080
      - traefik.http.routers.traefik-dashboard-http.entrypoints=http
      - traefik.http.routers.traefik-dashboard-http.rule=Host(`traefik.${DOMAIN}`)
      - traefik.http.routers.traefik-dashboard-https.entrypoints=https
      - traefik.http.routers.traefik-dashboard-https.rule=Host(`traefik.${DOMAIN}`)
      - traefik.http.routers.traefik-dashboard-https.tls=true
      - traefik.http.routers.traefik-dashboard-https.tls.certresolver=le
      - traefik.http.routers.traefik-dashboard-http.service=api@internal
      - traefik.http.routers.traefik-dashboard-https.service=api@internal
      - traefik.http.middlewares.admin-auth.basicauth.users=${TRAEFIK_USER}:${TRAEFIK_PASSWORD}
      - traefik.http.routers.traefik-dashboard-http.middlewares=admin-auth
      - traefik.http.routers.traefik-dashboard-https.middlewares=admin-auth
      - traefik.http.middlewares.https-redirect.redirectscheme.scheme=https
      - traefik.http.middlewares.https-redirect.redirectscheme.permanent=true
      - traefik.http.routers.traefik-dashboard-http.middlewares=https-redirect
    command:
      - "--providers.docker=true"
      - "--providers.docker.exposedbydefault=false"
      - "--entrypoints.http.address=:80"
      - "--entrypoints.https.address=:443"
      - "--certificatesresolvers.le.acme.email=${EMAIL?Variable not set}"
      - "--certificatesresolvers.le.acme.storage=/certificates/acme.json"
      - "--certificatesresolvers.le.acme.tlschallenge=true"
      - "--accesslog"
      - "--log"
      - "--api"

volumes:
  postgres_data:
  mongo_data:
  traefik-certificates:
